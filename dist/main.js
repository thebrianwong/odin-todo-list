(()=>{"use strict";const e=(e,t)=>{let s=t;return Object.assign(e,{getTaskTitle:()=>s,setTaskTitle(e){s=e}})},t=(e,t)=>{let s=t;return Object.assign(e,{getTaskDescription:()=>s,setTaskDescription(e){s=e}})},s=e=>{let t;return Object.assign(e,{addChecklist(e){t=e},removeChecklist(){t=void 0},getChecklist:()=>t})},o=e=>{let t=!1;return Object.assign(e,{toggleCompletedState(){t=!t},getCompletedState:()=>t})},l=e=>{let t=[];return Object.assign(e,{addTask:e=>(t.push(e),t.length-1),removeTask(e){t[e]=void 0},getChecklistTasks:()=>t,getSpecificChecklistTask:e=>t[e]})},c=(c,g,i,n)=>{let a={};return Object.assign(a,e(a,c),t(a,g),((e,t)=>{let s=t;return Object.assign(e,{getTaskDueDate:()=>s,setTaskDueDate(e){s=e}})})(a,i),((e,t)=>{let s=t;return Object.assign(e,{getTaskNotes:()=>s,setTaskNotes(e){s=e}})})(a,n),s(a),(e=>{let t=!1;return Object.assign(e,{togglePinnedState(){t=!t},getPinnedState:()=>t})})(a),o(a),l(a)),a},g=()=>{let e={};return Object.assign(e,l(e)),e},i=(()=>{let e={};return Object.assign(e,s(e)),e})();let n=(e=>{let s={};return Object.assign(s,t(s,"ddtest"),o(s)),s})();console.log(n),console.log(n.getCompletedState()),n.getCompletedState()?console.log(n.getCompletedState(),"this is now true"):console.log(n.getCompletedState(),"this is still false"),console.log(n.getCompletedState()),console.log(n.toggleCompletedState()),console.log(n.getCompletedState()),n.getCompletedState()?console.log(n.getCompletedState(),"this is now true"):console.log(n.getCompletedState(),"this is still false"),console.log(n.getCompletedState()),console.log(n),console.log(n.getTaskDescription()),n.setTaskDescription("wowwie"),console.log(n.getTaskDescription());let a=c("Make Cereal","part of breakfast plan","this morning","make sure to put milk back in fridge");console.log(a),console.log(a.getTaskTitle()),console.log(a.getTaskDescription()),console.log(a.getTaskDueDate()),console.log(a.getTaskNotes()),console.log(a.getPinnedState()),console.log(a.getCompletedState()),a.setTaskTitle("Make Chicken Broth"),a.setTaskDescription("requires 1 chicken and 1 broth"),a.setTaskDueDate("before I caught this cold"),a.setTaskNotes("don't sneeze into pot"),a.togglePinnedState(),a.toggleCompletedState(),console.log(a.getTaskTitle()),console.log(a.getTaskDescription()),console.log(a.getTaskDueDate()),console.log(a.getTaskNotes()),console.log(a.getPinnedState()),console.log(a.getCompletedState()),console.log(a.getChecklist()),a.addChecklist(["chicken","broth"]),console.log(a.getChecklist()),a.removeChecklist(),console.log(a.getChecklist());let k=g();console.log(k),console.log(k.addTask("bend toilet")),console.log(k.addTask("pinch toilet")),console.log(k.getChecklistTasks()),console.log(k.getSpecificChecklistTask(1)),k.removeTask(0),console.log(k.getChecklistTasks()),a.addChecklist(k),console.log(a),console.log(a.getChecklist()),console.log(a.getChecklist().getChecklistTasks()),console.log(a.getChecklist().addTask(n)),console.log(a.getChecklist().getSpecificChecklistTask(2)),console.log(a.getChecklist().getSpecificChecklistTask(2).getTaskDescription()),console.log(a.getChecklist().getSpecificChecklistTask(2).getCompletedState()),console.log(a.getChecklist().getSpecificChecklistTask(2).toggleCompletedState()),console.log(a.getChecklist().getSpecificChecklistTask(2).getCompletedState()),console.log(a.getChecklist().getSpecificChecklistTask(2).setTaskDescription("IT WORKS")),console.log(a.getChecklist().getSpecificChecklistTask(2).getTaskDescription());let C=(t=>{let o={};return Object.assign(o,e(o,"kitchen stuff"),s(o)),o})(),h=g();C.addChecklist(h),console.log(C.getChecklist().addTask(a)),console.log(C),console.log(C.getChecklist()),console.log(C.getChecklist().getSpecificChecklistTask(0)),console.log(C.getChecklist().getSpecificChecklistTask(0).getTaskTitle());let T=c("Clean pot","part of chores plan","this afternoon","make sure to use soap");console.log(C),console.log(C.getChecklist()),console.log(C.getChecklist().addTask(T)),console.log(C.getChecklist().getSpecificChecklistTask(1)),console.log(C.getChecklist().getSpecificChecklistTask(1).getTaskTitle()),console.log(i);let r=i;console.log(r),console.log(i.getChecklist()),console.log(i.addChecklist(C)),console.log(i.getChecklist()),console.log(i.getChecklist().getChecklist()),console.log(i.getChecklist().getChecklist().getChecklistTasks()),console.log(i.getChecklist().getChecklist().getSpecificChecklistTask(0)),console.log(i.getChecklist().getChecklist().getSpecificChecklistTask(0).getTaskTitle())})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
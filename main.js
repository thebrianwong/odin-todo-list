(()=>{"use strict";const e=e=>({completed:!1,toggle:()=>{e.completed?e.completed=!1:e.completed=!0},getCompletedState:()=>e.completed});let t={};Object.assign(t,e(t)),console.log(t),console.log(t.getCompletedState()),console.log(t.toggle()),console.log(t.getCompletedState()),console.log(t);let o=(l="ddtest",{getTaskDescription:()=>l,setTaskDescription:e=>{l=e}});var l;console.log(o),Object.assign(o,e(o)),o.getCompletedState()?console.log(o.getCompletedState(),"this is now true"):console.log(o.getCompletedState(),"this is still false"),console.log(o.getCompletedState()),console.log(o.toggle()),console.log(o.getCompletedState()),o.getCompletedState()?console.log(o.getCompletedState(),"this is now true"):console.log(o.getCompletedState(),"this is still false"),console.log(o.getCompletedState()),console.log(o),console.log(o.completed),console.log(typeof o)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,